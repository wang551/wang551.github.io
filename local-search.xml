<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>安装适用于 Linux 的 Windows 子系统 (WSL)</title>
    <link href="/2025/01/02/%E5%AE%89%E8%A3%85%E9%80%82%E7%94%A8%E4%BA%8E-Linux-%E7%9A%84-Windows-%E5%AD%90%E7%B3%BB%E7%BB%9F-WSL/"/>
    <url>/2025/01/02/%E5%AE%89%E8%A3%85%E9%80%82%E7%94%A8%E4%BA%8E-Linux-%E7%9A%84-Windows-%E5%AD%90%E7%B3%BB%E7%BB%9F-WSL/</url>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>适用于 Linux 的 Windows 子系统 (WSL) 可以在 Windows 系统运行 Linux 环境，而无需单独的虚拟机或双引导。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>首先需要 Windows 10版本要高于 2004 或 Windows 11 版本。</p><p>打开具有管理员权限的 CMD 或 PowerShell，运行</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">--inatall</span><br></code></pre></td></tr></table></figure><p>这个命令会启用 WSL 并默认安装 Ubuntu。</p><p>安装完毕后，重启系统</p><h1 id="设置用户名和密码"><a href="#设置用户名和密码" class="headerlink" title="设置用户名和密码"></a>设置用户名和密码</h1><p>在<code>开始</code>菜单打开 <code>Ubuntu</code>,命令行窗口会提示设置<strong>用户名</strong>和<strong>密码</strong></p><img src="/2025/01/02/%E5%AE%89%E8%A3%85%E9%80%82%E7%94%A8%E4%BA%8E-Linux-%E7%9A%84-Windows-%E5%AD%90%E7%B3%BB%E7%BB%9F-WSL/ubuntuinstall.png" class="" title="Ubuntu 命令行输入 UNIX 用户名"><p>输入密码时屏幕<strong>不会显示任何内容</strong>。</p><h1 id="文件访问"><a href="#文件访问" class="headerlink" title="文件访问"></a>文件访问</h1><p>可以在 Windows 文件管理器找到 Ubuntu 的文件</p><img src="/2025/01/02/%E5%AE%89%E8%A3%85%E9%80%82%E7%94%A8%E4%BA%8E-Linux-%E7%9A%84-Windows-%E5%AD%90%E7%B3%BB%E7%BB%9F-WSL/image-20250102142715997.png" class="" title="image-20250102142715997"><p>在命令行中运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">explorer.exe .<br></code></pre></td></tr></table></figure><p>可以打开当前命令行所在的文件夹。</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>WSL 现在已经安装好了，可以搞事了😋。</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://learn.microsoft.com/zh-cn/windows/wsl/">适用于 Linux 的 Windows 子系统文档 | Microsoft Learn</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>WSL</tag>
      
      <tag>Windows</tag>
      
      <tag>Linux</tag>
      
      <tag>子系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo 博客搭建指南</title>
    <link href="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
    <url>/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p>使用 Hexo “快速”搭建一个博客,并使用炫酷的主题.<br>心动了吗？快跟我来!  </p><span id="more"></span><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>首先你需要安装 Node.js、Git.</p><h3 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h3><p>官网在此 <a href="https://nodejs.org/">https://nodejs.org/</a> <a href="https://nodejs.org/">https://nodejs.org/</a>  </p><img src="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/node.png" class="" title="官网页面">  <p>下载最新版本,然后一路 Next 即可.  </p><div class="note note-info">            <p>第四步时有一个选项：<img src="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/node_install.png" class="" title="Tools for Native Modules"><br>如果你选上的话,安装窗口关闭后会跳出一个 CMD 窗口,给你安装其他工具.我的建议是：不选.毕竟要消耗额外的 3 Gb 的空间,在本教程中是无需这些工具的,所以你完全可以不选,但是你有其他需求的话看你自己.</p>          </div><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><p>官网在此 <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a>  </p><img src="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/Git_site.png" class="" title="Git_site">  <p>同样也是下载最新版本,一路 Next,然后就安装完成了.  </p><h2 id="安装-Hexo-1"><a href="#安装-Hexo-1" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h2><p>安装完成后,就开始安装 Hexo：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><p>然后就安装完成了.  </p><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>现在,找地方建一个空文件夹(这就是我们的博客目录了),右键在文件夹下运行 terminal,输入<code>hexo init</code> 进行初始化,</p><img src="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/hexo_init.png" class="" title="hexo init 运行结果"><p>这样就OK了.<br>你可以先运行 <code>hexo s</code> 看一下.  </p><img src="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/default.png" class="" title="默认主题"><p>这个是默认的主题,你可能会不喜欢,接下来我们来换一个酷酷的主题.</p><h1 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h1><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>这个网站是 Hexo 的主题展示页面,上面收录了很多主题,我选的是 Fluid,其中一个原因是他官方的文档非常详细,方便我<del>抄</del>写教程,接下来我会介绍如何配置.  </p><h2 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h2><p>在博客文件夹打开终端,运行以下命令,它会安装主题.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后修改 Hexo 配置文件(也就是你博客目录下的 <code>_config.yml</code> 文件),指定主题为 Fluid.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ./_config.yml</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题为fluid</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言,会影响主题显示的语言,按需修改</span><br></code></pre></td></tr></table></figure><div class="note note-info">            <p>要知道,现在你的博客目录下会有好几个配置文件,_config.yml 是 Hexo 的全局的配置文件, _config.[主题名称].yml 是主题的配置文件,一般不同的主题内容会有所不同.<br>一般来说,修改主题相关的配置时,改主题配置文件就好.<br>更多请看 <a href="https://hexo.io/zh-cn/docs/configuration#%E4%BD%BF%E7%94%A8%E4%BB%A3%E6%9B%BF%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">使用代替主题配置文件</a></p>          </div><p>然后再运行 <code>hexo s</code> 看一下.<br><img src="/" alt="fluid主题展示"><br>很好,但是,你会发现,网站的标题什么的还是 Hexo 默认的,要做自己的网站,怎么能没有个性呢?<br>接下来,我们要对它进行修改.</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p>你可能会疑问要改哪个配置文件,我的答案是:都差不多.<br>这是官网的解释,  </p><blockquote><p>我们强烈建议你将所有的主题配置集中在一处。 如果你不得不在多处配置你的主题，那么这些信息对你将会非常有用：Hexo 在合并主题配置时，Hexo 配置文件中的 theme_config 的优先级最高，其次是 _config.[theme].yml 文件。 最后是位于主题目录下的 _config.yml 文件。</p><footer><strong>https://hexo.io/zh-cn/docs/configuration 配置</strong></footer></blockquote> <p>所以说,改哪个文件,最终都会合并成一个配置文件.<br>我比较喜欢在 <code>_config.yml</code> 文件修改和博客相关的内容,比如网站标题,等等;对于主题相关的配置,我会修改 <code>_config.[theme].yml</code> 文件,这样以后换主题的时候会方便一点.<br>首先,我们要改的是,Hexo 的配置在博客目录下的 <code>_config.yml</code> 文件内,你可以通过修改此文件来配置 Hexo.  </p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Site</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo</span>       <span class="hljs-comment"># 这是网站的标题,起一个你喜欢的标题</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">&#x27;&#x27;</span>      <span class="hljs-comment"># 副标题</span><br><span class="hljs-attr">description:</span> <span class="hljs-string">&#x27;&#x27;</span>   <span class="hljs-comment"># 描述</span><br><span class="hljs-attr">keywords:</span><br><span class="hljs-attr">author:</span> <span class="hljs-string">John</span> <span class="hljs-string">Doe</span>  <span class="hljs-comment">#作者</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">en</span>      <span class="hljs-comment"># 改为 zh-CN 即可</span><br><span class="hljs-attr">timezone:</span> <span class="hljs-string">&#x27;&#x27;</span>      <span class="hljs-comment"># 时区,中国大陆地区可以使用 Asia/Shanghai.</span><br></code></pre></td></tr></table></figure><p>然后我们再来改一下主题的配置,如果你博客目录下没有 <code>_config.fluid.yml</code> 文件,你要新建一个,然后吧这个链接的内容复制进去:<a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">_config.yml</a>,这里面是 fluid 的所有配置,你可以去<a href="https://hexo.fluid-dev.com/docs/guide/">配置指南</a>查看详细信息,然后按需修改.<br>现在已经差不多了,先启动本地服务器,运行 <code>hexo server</code>,然后访问 <code>http://localhost:4000</code>,可以看到,一个简单的博客已经在本地建好了.<br><strong>但是</strong>,注意啊,是<strong>本地</strong>,你只能在本地访问.  </p><h1 id="部署到-GitHub-Pages"><a href="#部署到-GitHub-Pages" class="headerlink" title="部署到 GitHub Pages"></a>部署到 GitHub Pages</h1><p>如何在网络上访问这个网站呢?你可以将它放到一个静态托管网站上,GitHub Pages 就是一个不错的选择,第一,他免费;第二,他方便;但是,它加载慢.<br>不过问题不大,你可以选其他的托管平台,本教程先以此为例,原理都是差不多的.  </p><h2 id="账号"><a href="#账号" class="headerlink" title="账号"></a>账号</h2><p>GitHub 账号是必须的,什么? 你没有?<br><strong>那就快去<a href="https://github.com/signup">注册</a>!!</strong>  </p><h2 id="上传到远程仓库"><a href="#上传到远程仓库" class="headerlink" title="上传到远程仓库"></a>上传到远程仓库</h2><img src="/2023/09/09/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/newrepository.png" class="" title="新建远程仓库">  <h1 id="更换主题-1"><a href="#更换主题-1" class="headerlink" title="更换主题"></a>更换主题</h1><h2 id="安装-Fluid"><a href="#安装-Fluid" class="headerlink" title="安装 Fluid"></a>安装 Fluid</h2><p>在博客目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后修改 Hexo 配置文件,指定主题为 Fluid.</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># ./_config.yml</span><br><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span>  <span class="hljs-comment"># 指定主题</span><br><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span>  <span class="hljs-comment"># 指定语言,会影响主题显示的语言,按需修改</span><br></code></pre></td></tr></table></figure><h2 id="配置-Fluid"><a href="#配置-Fluid" class="headerlink" title="配置 Fluid"></a>配置 Fluid</h2><p>这里要先说一下配置文件的优先级<br>官网这样解释：  </p><blockquote><p>我们强烈建议你将所有的主题配置集中在一处。 如果你不得不在多处配置你的主题，那么这些信息对你将会非常有用：Hexo 在合并主题配置时，Hexo 配置文件中的 theme_config 的优先级最高，其次是 _config.[theme].yml 文件。 最后是位于主题目录下的 _config.yml 文件。</p><footer><strong>https://hexo.io/zh-cn/docs/configuration 配置</strong></footer></blockquote>  <p>也就是说,你在修改主题配置的时候,只需要把主题文件夹相应部分复制到<code>/_config.fluid.yml</code>内然后修改就可以覆盖默认配置了.  </p><p>关于 Fluid 的配置这里就不多赘述了,<a href="https://hexo.fluid-dev.com/docs/">官网</a>有详细的帮助文档.  </p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p>[1] <a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a><br>[2] <a href="https://hexo.fluid.io/">https://hexo.fluid.io</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World!</title>
    <link href="/2023/08/12/hello-world/"/>
    <url>/2023/08/12/hello-world/</url>
    
    <content type="html"><![CDATA[<h1 id="Hello-World！"><a href="#Hello-World！" class="headerlink" title="Hello World！"></a>Hello World！</h1><p>我的博客已经搭建完成，欢迎大家光临，我会在这里分享一些乱七八糟的东西，希望对你有所帮助。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
